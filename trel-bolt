<!DOCTYPE HTML>
<html>
	<head>
		<title>Max Song - Portfolio</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
		<link rel="stylesheet" href="assets/css/main.css">
        <link rel="stylesheet" href="assets/css/style.css">
		<noscript><link rel="stylesheet" href="assets/css/noscript.css"></noscript>
	</head>
		<body class="is-preload">
			<nav class="floating-nav">
				<a href="index.html" class="nav-logo"><b>Max Song</b></a>
				<div class="nav-buttons">
					<a href="index.html#header" class="nav-button"><b>Home</b></a>
					<a href="index.html#about" class="nav-button"><b>About</b></a>
					<a href="index.html#contact" class="nav-button"><b>Contact</b></a>
					<a href="projects.html" class="nav-button"><b>Projects</b></a>
					<a href="Song_Max_EngResume.pdf" target="_blank" class="nav-button"><b>Resume</b></a>
				</div>
			</nav>

            <div id="top" class="project-banner">
                <div class="project-title-section">
                    <h1>TREL - Bolt Analysis Calculator</h1>
                    <div class="title-underline"></div>
                </div>

                <div class="description-section">
                    In Spring 2025, as the Mark 1 neared launch, I began working as a Structures Engineer for TRELâ€™s Orbital Test Stand division, where we aim to create a launch and testing station at the J. J. Pickle Research Campus. This stand was going to reside in a 30-ft hole in the ground with multiple levels and concrete walls. My job was to design the CAD of the underground center, support anchoring including concrete bolt analysis, and pressure transducer brackets for fluid monitoring during engine testing. In this section, I will be going over the concrete bolt analysis calculator I developed.
                </div>

                <div class="content-section">
                    <div class="content-left">
                        <img src="images/TREL/cbc2.jpg" alt="Project Image" class="section-image">
                    </div>
                    <div class="content-right">
                        <p class="section-description">
                            <b>Summary: </b> The primary support structure holding both the rocket and engines during testing was going to be held by supports anchored to the concrete walls. To accurately calculate the number of bolts necessary, my friend and I were given a paper detailing formulas and variables needed to determine the final bolt diameter, length, required depth of the concrete, plate thickness, and the number of bolts. Our job also extended to modeling a support structure based on our findings, including determining what type of beam to use.
                            <br><br>
                            <b>Problem Statement: </b> Determine what type and how many bolts are necessary given the horizontal and vertical loads, which were subject to change.
                            <br><br>
                            <b>Project Timeline: </b> Our timeline was fairly flexible, but we were encouraged to finish in two weeks. However, with the progress my teammate and I made, we were able to finish within a week.

                        </p>
                    </div>
                </div>
            
                <div class="content-section">
                    <div class="content-left">
                        <p class="section-description">
                            <b>Conclusion: </b> Since this was a group project, we were able to cater each part of the project to our strengths. I worked on the initial calculations and Excel sheet while my teammate reformatted and validated each calculation. In the final calculator, I supplemented the document with additional calculations, including the optimal bolt distance and tests to validate the strength at a 4x safety factor. I also created a guide explaining how to use the calculator and each formula used. Following the completion of the calculator, my teammate and I worked on the support structure. Through analysis of beam types that would suit the environment, we determined that an I-beam was the best choice and modeled support structures in SolidWorks.
                            <br><br>
                            <b>Skills: </b> Excel, Analysis, CAD, Structural Design, Team Collaboration, Technical Documentation
                        </p>
                    </div>
                    <div class="content-right">
                        <img src="images/TREL/cbc7.jpg" alt="Project Image" class="section-image">
                    </div>
                </div>

                <div class="carousel-section">
                    <div class="carousel-container">
                        <div class="carousel-item">
                            <img src="images/TREL/cbc1.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                        <div class="carousel-item">
                            <img src="images/TREL/cbc2.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                        <div class="carousel-item">
                            <img src="images/TREL/cbc3.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                        <div class="carousel-item">
                            <img src="images/TREL/cbc4.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                        <div class="carousel-item">
                            <img src="images/TREL/cbc5.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                        <div class="carousel-item">
                            <img src="images/TREL/cbc6.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                        <div class="carousel-item">
                            <img src="images/TREL/cbc7.jpg" alt="Carousel Image 1" class="carousel-image">
                        </div>
                    </div>
                </div>

			<div id="bg"></div>

			<script src="assets/js/jquery.min.js"></script>
			<script src="assets/js/browser.min.js"></script>
			<script src="assets/js/breakpoints.min.js"></script>
			<script src="assets/js/util.js"></script>
			<script src="assets/js/main.js"></script>
			<script>
            
            function scrollToTop() {
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            }
            
            document.addEventListener('DOMContentLoaded', function() {
                const carousel = document.querySelector('.carousel-container');
                const items = Array.from(carousel.querySelectorAll('.carousel-item'));
                const itemWidth = items[0].offsetWidth;
                const itemCount = items.length;
                
                carousel.querySelectorAll('.carousel-item').forEach(item => item.remove());
                
                const clonedItemsBefore = items.map(item => item.cloneNode(true));
                const clonedItemsAfter = items.map(item => item.cloneNode(true));
                const originalItems = items.map(item => item.cloneNode(true));
                
                clonedItemsBefore.forEach(item => carousel.appendChild(item));
                originalItems.forEach(item => carousel.appendChild(item));
                clonedItemsAfter.forEach(item => carousel.appendChild(item));
                
                carousel.scrollLeft = itemWidth * itemCount;
                
                carousel.addEventListener('wheel', (e) => {
                    e.preventDefault();
                    
                    carousel.scrollLeft += (e.deltaX + e.deltaY)/2;
                    
                    const totalWidth = itemWidth * itemCount * 3;
                    const currentPosition = carousel.scrollLeft;
                    
                    if (currentPosition >= itemWidth * itemCount * 2) {
                        carousel.scrollLeft = currentPosition - (itemWidth * itemCount);
                    } else if (currentPosition <= 0) {
                        carousel.scrollLeft = currentPosition + (itemWidth * itemCount);
                    }
                });
            });

		</script>		
	</body>
</html>
